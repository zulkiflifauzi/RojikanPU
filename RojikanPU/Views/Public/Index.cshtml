@model RojikanPU.Models.HomeViewModel
@using RojikanPU.Component
@using hbehr.recaptcha

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-9">
        <h3>Daftar Laporan</h3>
        <hr />
        <table class="table" id="reportTable">
            <thead>
                <tr>
                    <td>Id</td>
                    <td>Waktu</td>
                    <td>Media</td>
                    <td>Status</td>
                    <td>Deskripsi</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ReportList)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.CreatedDate</td>
                        <td>@item.Origin</td>
                        <td>@item.Status</td>
                        <td>@Html.CreateDescription(item.Description)</td>
                        <td>@if (item.Status == "CLOSED") { @Html.ActionLink("Detail", "Details", new { id = item.Id }); }</td>
                    </tr>
                }
                
            </tbody>
            <tfoot>
                <tr>
                    <td></td>
                    <td></td>
                    <td>Media</td>
                    <td>Status</td>
                    <td></td>
                    <td></td>
                </tr>
            </tfoot>
        </table>
    </div>
    <div class="col-md-3">
        <h3>Kirim Laporan</h3>
       @using (Html.BeginForm())
       {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-12" })
                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    @ReCaptcha.GetCaptcha()
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Kirim" class="btn btn-default" />
                </div>
            </div>
        </div>
       }

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script type="text/javascript">
    $(document).ready(function () {
        $('#reportTable').DataTable({
            initComplete: function () {
                this.api().columns([2,3]).every(function () {
                    var column = this;
                    var select = $('<select><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                });
            },
            "order": []
        });
    });
</script>